version: 2
jobs:
  build:
    docker:
      - image: circleci/rust
        environment:
          CARGO_HOME: /home/circleci/.cargo
    steps:
      - checkout
      - restore_cache:
          keys:
            - project-v3-{{ checksum "Cargo.toml" }}-{{ .Branch }}
            - project-v3-{{ checksum "Cargo.toml" }}
            - project-v3-
      - run:
          name: Install Cargo Extensions
          command: cargo install --quiet cargo-kcov cargo-audit || true
      - run:
          name: Install rustfmt
          command: rustup component add rustfmt || true
      - run:
          name: Install kcov
          command: >-
            sudo apt-get install cmake g++ pkg-config jq libcurl4-openssl-dev libelf-dev libdw-dev binutils-dev libiberty-dev
            && cargo kcov --print-install-kcov-sh | sh
      - run:
          name: Install Redis (for end-to-end test)
          command: sudo apt-get install redis-server
      - run:
          name: Build + Test
          command: RUSTFLAGS="-C link-dead-code" cargo test --all --all-features
      - run:
          name: Check Formatting
          command: cargo fmt --all -- --check
      - run:
          name: Audit Dependencies
          command: cargo audit
      - run:
          name: Generate Coverage Report
          command:
            cargo kcov --all --verbose
            # -- --verify
            # --exclude-region="kcov-ignore-start:kcov-ignore-end"
            # --exclude-pattern="$CARGO_HOME,**/tests/**"
            # --exclude-line="^(\)*\}*,*)$"
      - run:
          name: Upload Code Coverage
          command: "bash <(curl -s https://codecov.io/bash)"
      - save_cache:
          key: project-v3-{{ checksum "Cargo.toml" }}-{{ .Branch }}
          paths:
            - ./target
            - /home/circleci/.cargo
